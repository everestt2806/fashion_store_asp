@model FashionStore.Models.SanPham

@{
    ViewBag.Title = "Thêm sản phẩm mới";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="container-fluid">
    <div class="page-header">
        <h2><i class="fas fa-plus-circle me-2"></i>&nbsp Thêm sản phẩm mới</h2>
    </div>
    <div class="card">
        <div class="card-body">
            <!-- Breadcrumb giữ nguyên -->
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item">
                        <a href="/Admin/Home/Index" class="text-decoration-none">
                            <i class="fas fa-home me-1"></i>&nbsp Trang chủ
                        </a>
                    </li>
                    <li class="breadcrumb-item">
                        <a href="/Admin/SanPhams" class="text-decoration-none">
                            <i class="fas fa-box me-1"></i>&nbsp Sản phẩm
                        </a>
                    </li>
                    <li class="breadcrumb-item active">
                        <i class="fas fa-plus me-1"></i>&nbsp Tạo mới
                    </li>
                </ol>
            </nav>

            @using (Html.BeginForm("Create", "SanPhams", FormMethod.Post, new { enctype = "multipart/form-data", @class = "needs-validation", id = "createProductForm" }))
            {
                @Html.AntiForgeryToken()

                <div class="row">
                    <!-- Thông tin cơ bản -->
                    <div class="col-md-6">
                        <div class="section-divider">
                            <h5 class="text-primary mb-4">
                                <i class="fas fa-info-circle me-2"></i>&nbsp Thông tin cơ bản
                            </h5>

                            <div class="form-group mb-4">
                                @Html.LabelFor(model => model.TenSP, "Tên sản phẩm", new { @class = "form-label required" })
                                <div class="input-group">
                                    <span class="input-group-text bg-light">
                                        <i class="fas fa-tag"></i>
                                    </span>
                                    @Html.TextBoxFor(model => model.TenSP, new { @class = "form-control form-control-lg", placeholder = "Nhập tên sản phẩm" })
                                </div>
                                <div class="invalid-feedback">Vui lòng nhập tên sản phẩm</div>
                            </div>

                            <div class="form-group mb-4">
                                @Html.LabelFor(model => model.GiaBan, "Giá bán", new { @class = "form-label required" })
                                <div class="input-group">
                                    <span class="input-group-text bg-light">
                                        <i class="fas fa-dollar-sign"></i>
                                    </span>
                                    @Html.TextBoxFor(model => model.GiaBan, new { @class = "form-control form-control-lg", placeholder = "Nhập giá bán" })
                                    <span class="input-group-text">VNĐ</span>
                                </div>
                                <div class="invalid-feedback">Vui lòng nhập giá bán hợp lệ</div>
                            </div>

                            <div class="form-group mb-4">
                                @Html.LabelFor(model => model.SoLuong, "Số lượng", new { @class = "form-label required" })
                                <div class="input-group">
                                    <span class="input-group-text bg-light">
                                        <i class="fas fa-cubes"></i>
                                    </span>
                                    @Html.TextBoxFor(model => model.SoLuong, new { @class = "form-control form-control-lg", placeholder = "Nhập số lượng" })
                                </div>
                                <div class="invalid-feedback">Vui lòng nhập số lượng hợp lệ</div>
                            </div>
                        </div>
                    </div>

                    <!-- Thông tin bổ sung -->
                    <div class="col-md-6">
                        <div class="section-divider">
                            <h5 class="text-primary mb-4">
                                <i class="fas fa-cog me-2"></i>&nbsp Thông tin bổ sung
                            </h5>

                            <div class="form-group mb-4">
                                @Html.LabelFor(model => model.MaLoai, "Loại sản phẩm", new { @class = "form-label required" })
                                <div class="input-group">
                                    <span class="input-group-text bg-light">
                                        <i class="fas fa-list"></i>
                                    </span>
                                    @Html.DropDownList("MaLoai", null, "-- Chọn loại sản phẩm --", new { @class = "form-select form-select-lg" })
                                </div>
                                <div class="invalid-feedback">Vui lòng chọn loại sản phẩm</div>
                            </div>

                            <div class="form-group mb-4">
                                @Html.LabelFor(model => model.MaNCC, "Nhà cung cấp", new { @class = "form-label required" })
                                <div class="input-group">
                                    <span class="input-group-text bg-light">
                                        <i class="fas fa-building"></i>
                                    </span>
                                    @Html.DropDownList("MaNCC", null, "-- Chọn nhà cung cấp --", new { @class = "form-select form-select-lg" })
                                </div>
                                <div class="invalid-feedback">Vui lòng chọn nhà cung cấp</div>
                            </div>

                            <div class="form-group mb-4">
                                @Html.LabelFor(model => model.AnhSP, "Ảnh sản phẩm", new { @class = "form-label required" })
                                <div class="input-group">
                                    <span class="input-group-text bg-light">
                                        <i class="fas fa-image"></i>
                                    </span>
                                    <input type="file" name="AnhSP" class="form-control form-control-lg" accept="image/*" required />
                                </div>
                                <div class="invalid-feedback">Vui lòng chọn ảnh sản phẩm</div>
                                <div class="mt-3">
                                    <img id="preview" src="#" alt="Preview" style="display:none; max-width: 200px;" class="img-thumbnail shadow-sm" />
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Mô tả -->
                    <div class="col-12">
                        <div class="section-divider">
                            <h5 class="text-primary mb-4">
                                <i class="fas fa-align-left me-2"></i>&nbsp Mô tả sản phẩm
                            </h5>
                            <div class="form-group">
                                @Html.TextAreaFor(model => model.MoTa, new { @class = "form-control", rows = "4", placeholder = "Nhập mô tả sản phẩm" })
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Buttons -->
                <div class="form-group mt-4 d-flex gap-3">
                    <button type="submit" class="btn btn-primary btn-lg">
                        <i class="fas fa-save me-2"></i>&nbsp Tạo sản phẩm
                    </button>
                    <a href="/Admin/SanPhams" class="btn btn-light btn-lg">
                        <i class="fas fa-times me-2"></i>&nbsp Hủy
                    </a>
                </div>
            }
        </div>

    </div>

</div>
<style>
    .page-header {
        background: linear-gradient(135deg, #4e73df, #224abe);
        padding: 1.5rem;
        border-radius: 0.5rem;
        margin-bottom: 2rem;
    }

        .page-header h2 {
            color: white;
            margin: 0;
            font-size: 1.75rem;
        }

    .breadcrumb {
        background: #f8f9fa;
        padding: 15px;
        border-radius: 5px;
        margin-bottom: 25px;
    }

    .breadcrumb-item a {
        color: #4e73df;
        text-decoration: none;
    }
</style>



@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        $(document).ready(function () {
            // Form validation
            $('#createProductForm').on('submit', async function (e) {
                e.preventDefault();
                let isValid = true;

                // Validate Tên sản phẩm
                if ($('#TenSP').val().trim() === '') {
                    $('#TenSP').addClass('is-invalid');
                    isValid = false;
                } else {
                    $('#TenSP').removeClass('is-invalid');
                }

                // Validate Giá bán
                const giaBanInput = $('#GiaBan');
                const giaBanValue = giaBanInput.val().replace(/,/g, ''); 
                if (giaBanValue === '' || isNaN(giaBanValue) || parseInt(giaBanValue) <= 0) {
                    giaBanInput.addClass('is-invalid');
                    isValid = false;
                } else {
                    giaBanInput.removeClass('is-invalid');
                    giaBanInput.val(giaBanValue);
                }

                // Validate Số lượng
                if ($('#SoLuong').val().trim() === '' || isNaN($('#SoLuong').val()) || parseInt($('#SoLuong').val()) < 0) {
                    $('#SoLuong').addClass('is-invalid');
                    isValid = false;
                } else {
                    $('#SoLuong').removeClass('is-invalid');
                }

                // Validate Loại sản phẩm
                if ($('#MaLoai').val() === '') {
                    $('#MaLoai').addClass('is-invalid');
                    isValid = false;
                } else {
                    $('#MaLoai').removeClass('is-invalid');
                }

                // Validate Nhà cung cấp
                if ($('#MaNCC').val() === '') {
                    $('#MaNCC').addClass('is-invalid');
                    isValid = false;
                } else {
                    $('#MaNCC').removeClass('is-invalid');
                }

                // Validate Ảnh sản phẩm
                if ($('input[name="AnhSP"]').get(0).files.length === 0) {
                    $('input[name="AnhSP"]').addClass('is-invalid');
                    isValid = false;
                } else {
                    $('input[name="AnhSP"]').removeClass('is-invalid');
                }

                if (!isValid) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Lỗi!',
                        text: 'Vui lòng điền đầy đủ thông tin bắt buộc',
                        confirmButtonText: 'Đóng'
                    });
                    return false;
                }

                try {
                    // Show loading state
                    await Swal.fire({
                        title: 'Đang xử lý...',
                        text: 'Vui lòng chờ trong giây lát',
                        allowOutsideClick: false,
                        showConfirmButton: false,
                        didOpen: () => {
                            Swal.showLoading();
                        },
                        timer: 1000
                    });

                    // Tạo FormData object để gửi dữ liệu form bao gồm cả file
                    const formData = new FormData(this);

                    // Gửi request AJAX
                    const response = await $.ajax({
                        url: this.action,
                        type: 'POST',
                        data: formData,
                        processData: false,
                        contentType: false
                    });

                    // Hiển thị thông báo thành công
                    await Swal.fire({
                        icon: 'success',
                        title: 'Thành công!',
                        text: 'Thêm sản phẩm mới thành công',
                        timer: 1500,
                        showConfirmButton: false
                    });

                    // Chuyển hướng về trang Index
                    window.location.href = '/Admin/SanPhams';

                } catch (error) {
                    // Xử lý lỗi nếu có
                    Swal.fire({
                        icon: 'error',
                        title: 'Lỗi!',
                        text: 'Có lỗi xảy ra khi thêm sản phẩm. Vui lòng thử lại!',
                        confirmButtonText: 'Đóng'
                    });
                }
            });

            // Reset validation on input
            $('input, select').on('input change', function () {
                $(this).removeClass('is-invalid');
            });

            // Format currency input
            $('#GiaBan').on('input', function () {
                let value = $(this).val().replace(/\D/g, "")
                    .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                $(this).val(value);
            });

            // Allow only numbers for SoLuong
            $('#SoLuong').on('input', function () {
                $(this).val($(this).val().replace(/[^0-9]/g, ''));
            });

            // Image preview
            $('input[name="AnhSP"]').change(function () {
                if (this.files && this.files[0]) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        $('#preview').attr('src', e.target.result).show();
                    }
                    reader.readAsDataURL(this.files[0]);
                }
            });
        });
    </script>
}

