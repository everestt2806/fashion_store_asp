@model FashionStore.Models.SanPham

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<style>
    .page-header {
        background: linear-gradient(135deg, #4e73df, #224abe);
        padding: 1.5rem;
        border-radius: 0.5rem;
        margin-bottom: 2rem;
    }

        .page-header h2 {
            color: white;
            margin: 0;
            font-size: 1.75rem;
        }

    .breadcrumb {
        background: #f8f9fa;
        padding: 15px;
        border-radius: 5px;
        margin-bottom: 25px;
    }

    .breadcrumb-item a {
        color: #4e73df;
        text-decoration: none;
    }
</style>

<div class="container-fluid">
    <div class="page-header">
        <h2><i class="fas fa-edit me-2"></i>&nbsp Sửa sản phẩm</h2>
    </div>

    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item">
                                <a href="/Admin/Home/Index" class="text-decoration-none">
                                    <i class="fas fa-home me-1"></i>&nbsp Trang chủ
                                </a>
                            </li>
                            <li class="breadcrumb-item">
                                <a href="/Admin/SanPhams" class="text-decoration-none">
                                    <i class="fas fa-box me-1"></i>&nbsp Sản phẩm
                                </a>
                            </li>
                            <li class="breadcrumb-item active">
                                <i class="fas fa-edit me-1"></i>&nbsp Sửa sản phẩm
                            </li>
                        </ol>
                    </nav>
                    @using (Html.BeginForm("Edit", "SanPhams", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.MaSP)
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group mb-3">
                            <label class="form-label">Tên sản phẩm</label>
                            @Html.EditorFor(model => model.TenSP, new { htmlAttributes = new { @class = "form-control", required = "required", value = Model.TenSP } })
                            @Html.ValidationMessageFor(model => model.TenSP, "", new { @class = "text-danger" })
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label class="form-label">Giá bán</label>
                                    <div class="input-group">
                                        @Html.TextBoxFor(model => model.GiaBan, new { @class = "form-control", required = "required" })
                                        <span class="input-group-text">VNĐ</span>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.GiaBan, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label class="form-label">Số lượng</label>
                                    @Html.EditorFor(model => model.SoLuong, new { htmlAttributes = new { @class = "form-control", type = "number", min = "0", required = "required", value = Model.SoLuong } })
                                    @Html.ValidationMessageFor(model => model.SoLuong, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label class="form-label">Loại sản phẩm</label>
                                    @Html.DropDownList("MaLoai", null, "-- Chọn loại sản phẩm --", new { @class = "form-select", required = "required" })
                                    @Html.ValidationMessageFor(model => model.MaLoai, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label class="form-label">Nhà cung cấp</label>
                                    @Html.DropDownList("MaNCC", null, "-- Chọn nhà cung cấp --", new { @class = "form-select", required = "required" })
                                    @Html.ValidationMessageFor(model => model.MaNCC, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group mb-3">
                            <label class="form-label">Hình ảnh hiện tại</label>
                            <div class="mb-2">
                                @if (!string.IsNullOrEmpty(Model.AnhSP))
                                {
                                    <img src="/Images/@Model.AnhSP" class="img-thumbnail" style="max-width: 200px;" />
                                }
                                else
                                {
                                    <p class="text-muted">Chưa có ảnh</p>
                                }
                            </div>
                            <label class="form-label">Chọn ảnh mới (nếu muốn thay đổi)</label>
                            <input type="file" class="form-control" id="imageInput" accept="image/*" onchange="previewImage(event)">
                            @Html.HiddenFor(model => model.AnhSP)
                            <div class="mt-2">
                                <img id="preview" style="max-width: 200px; display: none" class="img-thumbnail" />
                            </div>
                            @Html.ValidationMessageFor(model => model.AnhSP, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-3">
                            <label class="form-label">Mô tả</label>
                            @Html.TextAreaFor(model => model.MoTa, new { @class = "form-control", rows = "4", value = Model.MoTa })
                            @Html.ValidationMessageFor(model => model.MoTa, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mt-4 d-flex gap-3">
                            <button type="submit" class="btn btn-primary btn-lg">
                                <i class="fas fa-save me-2"></i>&nbsp Lưu thay đổi
                            </button>
                            <a href="@Url.Action("Index")" class="btn btn-light btn-lg">
                                <i class="fas fa-times me-2"></i>&nbsp Hủy
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        function previewImage(event) {
            var reader = new FileReader();
            reader.onload = function() {
                var preview = document.getElementById('preview');
                preview.src = reader.result;
                preview.style.display = 'block';
            }
            reader.readAsDataURL(event.target.files[0]);

            var fileName = event.target.files[0].name;
            document.getElementById('@Html.IdFor(m => m.AnhSP)').value = fileName;
        }

        $(document).ready(function() {
            // Format giá ban đầu khi trang load
            let initialPrice = $('#GiaBan').val();
            if (initialPrice) {
                $('#GiaBan').val(parseFloat(initialPrice).toLocaleString('en-US'));
            }

            // Format currency input
            $('#GiaBan').on('input', function () {
                let value = $(this).val().replace(/\D/g, "")
                    .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                $(this).val(value);
            });

            // Allow only numbers for SoLuong
            $('#SoLuong').on('input', function () {
                $(this).val($(this).val().replace(/[^0-9]/g, ''));
                if ($(this).val() < 0) {
                    $(this).val(0);
                }
            });

            $("#MaLoai").val('@Model.MaLoai');
            $("#MaNCC").val('@Model.MaNCC');

            // Reset validation on input
            $('input, select').on('input change', function () {
                $(this).removeClass('is-invalid');
            });

            // Xử lý form submit
            $('form').on('submit', async function(e) {
                e.preventDefault();
                let isValid = true;

                // Validate Tên sản phẩm
                if ($('#TenSP').val().trim() === '') {
                    $('#TenSP').addClass('is-invalid');
                    isValid = false;
                }

                // Validate Giá bán
                const giaBanInput = $('#GiaBan');
                const giaBanValue = giaBanInput.val().replace(/,/g, '');
                if (giaBanValue === '' || isNaN(giaBanValue) || parseInt(giaBanValue) <= 0) {
                    giaBanInput.addClass('is-invalid');
                    isValid = false;
                }

                // Validate Số lượng
                if ($('#SoLuong').val().trim() === '' || isNaN($('#SoLuong').val()) || parseInt($('#SoLuong').val()) < 0) {
                    $('#SoLuong').addClass('is-invalid');
                    isValid = false;
                }

                // Validate Loại sản phẩm
                if ($('#MaLoai').val() === '') {
                    $('#MaLoai').addClass('is-invalid');
                    isValid = false;
                }

                // Validate Nhà cung cấp
                if ($('#MaNCC').val() === '') {
                    $('#MaNCC').addClass('is-invalid');
                    isValid = false;
                }

                if (!isValid) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Lỗi!',
                        text: 'Vui lòng điền đầy đủ thông tin bắt buộc',
                        confirmButtonText: 'Đóng'
                    });
                    return false;
                }

                // Xử lý giá bán trước khi submit
                let giabanValue = $('#GiaBan').val().replace(/,/g, '');
                $('#GiaBan').val(giabanValue);

                // Show loading state
                await Swal.fire({
                    title: 'Đang xử lý...',
                    text: 'Vui lòng chờ trong giây lát',
                    allowOutsideClick: false,
                    showConfirmButton: false,
                    didOpen: () => {
                        Swal.showLoading();
                    },
                    timer: 1000
                });

                var formData = new FormData(this);

                try {
                    const response = await $.ajax({
                        url: this.action,
                        type: 'POST',
                        data: formData,
                        processData: false,
                        contentType: false
                    });

                    // Hiển thị thông báo thành công
                    await Swal.fire({
                        icon: 'success',
                        title: 'Thành công!',
                        text: 'Cập nhật sản phẩm thành công',
                        timer: 1500,
                        showConfirmButton: false
                    });

                    // Chuyển hướng về trang Index
                    window.location.href = '/Admin/SanPhams';

                } catch (error) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Lỗi!',
                        text: 'Có lỗi xảy ra khi cập nhật sản phẩm. Vui lòng thử lại!',
                        confirmButtonText: 'Đóng'
                    });

                    // Format lại giá bán nếu có lỗi
                    $('#GiaBan').val(giabanValue.replace(/\B(?=(\d{3})+(?!\d))/g, ","));
                }
            });
        });
    </script>
}



